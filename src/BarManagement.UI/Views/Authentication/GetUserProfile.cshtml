@model BarManagement.UI.Models.Authentication.UserViewModel

<div class="container p-3">
    <div class="row mb-3">
        <h1>Worker info</h1>
        <div class="col-6">
            @Model.Name @Model.Surname @Model.Patronymic
            <p><strong>Email: </strong>@Model.Email</p>
            <p><strong>Phone: </strong>@Model.PhoneNumber</p>
        </div>
        <div class="col-6">
            <div class="row mb-2">
                <div class="col-6">
                    <h5>Schedule</h5>
                </div>
                <div class="col-6">
                    <div class="w-100 btn-group" role="group">
                        <a class="btn btn-primary btn-custom" asp-controller="Authentication" asp-action="Schedule" asp-route-userId="@Model.Id">Manage Schedule</a>
                    </div>
                </div>
            </div>

            @if (Model.Schedules != null && Model.Schedules.Any())
            {
                @foreach (var schedule in Model.Schedules.Take(3))
                {
                    <div class="row">
                        <div class="col-6">
                            Start Date: @schedule.StartDate
                        </div>
                        <div class="col-6">
                            End Date: @schedule.EndDate
                        </div>
                    </div>
                }
            }
            else
            {
                <strong>No schedule</strong>
                <br />
            }
        </div>
    </div>
    <hr style="height: 2px;"/>
    <h3>Receipts</h3>
    <select id="timePeriodSelect" class="form-select mb-4">
        <option value="day" selected>Day</option>
        <option value="month">Month</option>
    </select>
    <table class="table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>Total</th>
                <th>Created</th>
            </tr>
        </thead>
        <tbody id="receiptsTableBody">

        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            function formatDate(date) {
                return date.toISOString().split('T')[0] + 'T00:00:00';
            }

            function getStartAndEndDate(period) {
                const now = new Date();
                let startDate, endDate;

                if (period === 'day') {
                    startDate = formatDate(now);
                    endDate = formatDate(new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59));
                } else if (period === 'month') {
                    startDate = formatDate(new Date(now.getFullYear(), now.getMonth(), 1));
                    endDate = formatDate(new Date(now.getFullYear(), now.getMonth() + 1, 0, 23, 59, 59));
                }

                return { startDate, endDate };
            }

            function fetchReceipts() {
                const period = $('#timePeriodSelect').val();
                const { startDate, endDate } = getStartAndEndDate(period);
                const userId = '@Model.Id';

                $.ajax({
                    url: '@Url.Action("GetBarmenReceipts", "Authentication")',
                    type: 'GET',
                    data: {
                        barmenId: userId,
                        startDate: startDate,
                        endDate: endDate
                    },
                    success: function (data) {
                        const tableBody = $('#receiptsTableBody');
                        tableBody.empty();

                        if (data.length === 0) {
                            tableBody.append('<tr><td colspan="2">No receipts found</td></tr>');
                        } else {
                            data.forEach(receipt => {
                                console.log(receipt);
                                const row = `<tr>
                                    <td>${receipt.total}</td>
                                    <td>${receipt.created}</td>
                                </tr>`;
                                tableBody.append(row);
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching receipts:', error);
                    }
                });
            }

            $('#timePeriodSelect').change(fetchReceipts);
            fetchReceipts();
        });
    </script>
}
